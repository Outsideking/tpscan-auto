name: TPscan + GPT Summary (no-external-actions)
on:
  workflow_dispatch: {}
  # ถ้าอยากให้รันทุกวัน 09:00 น.เวลาไทย (UTC+7) ใช้ 02:00 UTC
  schedule:
    - cron: '0 2 * * *'

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # push รายงานเข้า branch
    steps:
      - name: Clone current repo (avoid restricted checkout)
        run: |
          REPO="${GITHUB_REPOSITORY}"
          git clone "https://github.com/${REPO}.git" repo
          echo "WORKDIR=$PWD/repo" >> $GITHUB_ENV

      - name: Install deps (Go + Python)
        run: |
          sudo apt-get update
          sudo apt-get install -y golang-go python3-pip jq
          pip3 install --upgrade openai

      - name: Pull & build TPscan (Go version)
        run: |
          cd "$WORKDIR"
          mkdir -p tools && cd tools
          git clone https://github.com/captain686/TpScan.git
          cd TpScan
          go build -o tpscan

      - name: Run scan
        run: |
          cd "$WORKDIR"
          mkdir -p reports
          ./tools/TpScan/tpscan -f targets.txt | tee reports/raw.txt

      - name: Summarize with GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd "$WORKDIR"
          python3 - << 'PY'
          import os,io
          from openai import OpenAI
          client = OpenAI(api_key=os.environ["OPENAI_API_KEY"])
          raw = io.open("reports/raw.txt","r",encoding="utf-8",errors="ignore").read()
          prompt = (
            "สรุปผลการสแกน ThinkPHP แบบ bullet list:"
            " 1) จัดระดับความเสี่ยงสูง→ต่ำ"
            " 2) ไล่ URL/หลักฐานที่บ่งชี้ช่องโหว่"
            " 3) ข้อเสนอแนะแก้ไขสั้นๆ ต่อรายการ\n\n"
            f"Raw logs (ตัดย่อ):\n{raw[:120000]}"
          )
          resp = client.chat.completions.create(
            model="gpt-5",
            messages=[
              {"role":"system","content":"คุณเป็นนักวิเคราะห์ความปลอดภัยเว็บ"},
              {"role":"user","content":prompt}
            ],
            temperature=0
          )
          md = resp.choices[0].message.content
          io.open("reports/summary.md","w",encoding="utf-8").write(md)
          PY

      - name: Commit reports to branch
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: actions@github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: actions@github.com
        run: |
          cd "$WORKDIR"
          git checkout -B scan-reports
          git add reports/*
          git commit -m "tpscan report $(date -u +'%Y-%m-%dT%H:%MZ')" || echo "No changes"
          git push -f "https://x-access-token:${{ github.token }}@github.com/${GITHUB_REPOSITORY}.git" scan-reports
